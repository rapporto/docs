SDK Rapporto
============

| Для реализации отправки push-сообщений на мобильное приложение мы предлагаем свой комплект для разработки программного обеспечения Software Development Kit (далее SDK). 
| Предлагаемый SDK — это библиотека с набором методов и функций, которая встраивается в приложение и позволяет подключиться к сервису Rapporto Push Notification System для доставки абонентам push-сообщений, отслеживать статусы доставки и открытия абонентом этих сообщений.

SDK Rapporto совместим для встраивания как в нативные, так и в кроссплатформенные приложения (Flutter, React Native).

Функциональные возможности SDK Rapporto:

* приём и отображение push-сообщений, отправленных на устройство с помощью PNS (Push Notification Service), в том числе содержащих расширенный медиа-контент;
* сохранение принятых push-сообщений в локальной базе данных;
* отслеживание доставки и открытия push-сообщений с отправкой соответствующих запросов на сервер.

Об Android–приложении со встроенным SDK
---------------------------------------

Более подробно можно ознакомится в документации SDK для мобильных приложений на платформе Android – `Android SDK на GitHub <https://github.com/zgr-im/zgr-pushservice-android-sdk-builds>`_.

Для настройки Android–приложения со встроенным SDK необходимо:

* Передать технической поддержке данные Firebase проекта — private key в формате *.json*;
* Добавить полученные от техподдержки идентификаторы проекта "applicationId", "apiKey", "endpointURL" в файл конфигурации проекта *ZGRConfig.json*.


Об IOS–приложении со встроенным SDK 
-----------------------------------

Более подробно можно ознакомиться в документации SDK для мобильных приложений на платформе iOS — `IOS SDK на GitHub <https://github.com/zgr-im/zgr-pushservice-ios-sdk-builds>`_.  

Для настройки IOS–приложения со встроенным SDK необходимо:

1. Передать технической поддержке следующие данные:

   * Team id — 10-значный буквенно-цифровой Team id, присвоенный компании при вступлении в программу разработки Apple. Если приложений несколько, Team ID для них всех будет одинаковый;
   * Key id — идентификатор файла *.p8* без ``AuthKey_`` и *.p8*. Например, файл ``AuthKey_N5DDD32S67.p8``, тогда key_id — N5DDD32S67;
   * Topiс — бандл приложения. Его устанавливают владельцы приложения, используя обратную запись доменного имени. Что-то вида com.myCompany.superapp;
   * Файл-сертификат APNS PUSH Certificate в формате *.p8*.

2. Добавить полученные от техподдержки идентификаторы проекта "applicationId", "apiKey", "endpointURL" в файл конфигурации проекта *ZGRConfig.json*.


Об HMS–приложении со встроенным SDK 
-----------------------------------

Более подробно можно ознакомится в документации SDK для мобильных приложений на платформе HMS — `Android SDK на GitHub <https://github.com/zgr-im/zgr-pushservice-android-sdk-builds>`_. 

Для настройки HMS–приложения со встроенным SDK необходимо:

1. Передать технической поддержке следующие данные:

   * HMS App ID;
   * HMS App secret.

2. Добавить полученные от техподдержки идентификаторы проекта "applicationId", "apiKey", "endpointURL" в файл конфигурации проекта *ZGRConfig.json*. 
   
Если остались вопросы по работе SDK Rapporto, просим обращаться в `службу технической поддержки <https://doc.rapporto.ru/support.html>`_.

